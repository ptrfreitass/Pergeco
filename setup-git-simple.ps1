# ===================================
# üöÄ Script de Configura√ß√£o Git - Pergeco (Simplificado)
# ===================================

Write-Host "üéØ Configurando Git e GitHub para o projeto Pergeco..." -ForegroundColor Cyan
Write-Host ""

# ===================================
# 1. Verificar se Git est√° instalado
# ===================================
Write-Host "üìã Verificando instala√ß√£o do Git..." -ForegroundColor Yellow
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git instalado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git n√£o est√° instalado!" -ForegroundColor Red
    Write-Host "   Baixe em: https://git-scm.com/download/win" -ForegroundColor Yellow
    exit 1
}
Write-Host ""

# ===================================
# 2. Verificar se j√° existe reposit√≥rio
# ===================================
Write-Host "üìã Verificando reposit√≥rio Git existente..." -ForegroundColor Yellow
if (Test-Path ".git") {
    Write-Host "‚ö†Ô∏è  Reposit√≥rio Git j√° existe!" -ForegroundColor Yellow
    $response = Read-Host "   Deseja remover e recome√ßar do zero? (S/N)"
    
    if ($response -eq "S" -or $response -eq "s") {
        Write-Host "üóëÔ∏è  Removendo reposit√≥rio existente..." -ForegroundColor Yellow
        Remove-Item -Recurse -Force .git
        Write-Host "‚úÖ Reposit√≥rio removido!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Opera√ß√£o cancelada." -ForegroundColor Red
        exit 0
    }
} else {
    Write-Host "‚úÖ Nenhum reposit√≥rio Git encontrado." -ForegroundColor Green
}
Write-Host ""

# ===================================
# 3. Configurar usu√°rio Git
# ===================================
Write-Host "üìã Configurando usu√°rio Git..." -ForegroundColor Yellow
$userName = git config --global user.name
$userEmail = git config --global user.email

if ([string]::IsNullOrEmpty($userName)) {
    $userName = Read-Host "   Digite seu nome"
    git config --global user.name "$userName"
}

if ([string]::IsNullOrEmpty($userEmail)) {
    $userEmail = Read-Host "   Digite seu email"
    git config --global user.email "$userEmail"
}

Write-Host "‚úÖ Usu√°rio configurado:" -ForegroundColor Green
Write-Host "   Nome: $userName" -ForegroundColor Cyan
Write-Host "   Email: $userEmail" -ForegroundColor Cyan
Write-Host ""

# ===================================
# 4. Configurar branch padr√£o
# ===================================
Write-Host "üìã Configurando branch padr√£o como 'main'..." -ForegroundColor Yellow
git config --global init.defaultBranch main
Write-Host "‚úÖ Branch padr√£o configurada!" -ForegroundColor Green
Write-Host ""

# ===================================
# 5. Inicializar reposit√≥rio
# ===================================
Write-Host "üìã Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
git init
Write-Host "‚úÖ Reposit√≥rio inicializado!" -ForegroundColor Green
Write-Host ""

# ===================================
# 6. Adicionar arquivos
# ===================================
Write-Host "üìã Adicionando arquivos ao reposit√≥rio..." -ForegroundColor Yellow
git add .
Write-Host "‚úÖ Arquivos adicionados!" -ForegroundColor Green
Write-Host ""

# ===================================
# 7. Fazer commit inicial
# ===================================
Write-Host "üìã Fazendo commit inicial..." -ForegroundColor Yellow
git commit -m "Initial commit - Sprint 0 e Sprint 1 completas" -m "Sprint 0: Configuracao do Projeto" -m "Sprint 1: Autenticacao Completa" -m "Backend: Laravel Sanctum" -m "Frontend: Angular 20" -m "Guards e Interceptors implementados"
Write-Host "‚úÖ Commit inicial criado!" -ForegroundColor Green
Write-Host ""

# ===================================
# 8. Criar tags
# ===================================
Write-Host "üìã Criando tags para as sprints..." -ForegroundColor Yellow

git tag -a v0.1.0 -m "Sprint 0: Configuracao do Projeto"
git tag -a v1.0.0 -m "Sprint 1: Autenticacao Completa"

Write-Host "‚úÖ Tags criadas: v0.1.0 e v1.0.0" -ForegroundColor Green
Write-Host ""

# ===================================
# 9. Mostrar status
# ===================================
Write-Host "üìä Status do reposit√≥rio:" -ForegroundColor Cyan
git log --oneline
Write-Host ""
git tag
Write-Host ""

# ===================================
# 10. Configurar remote (GitHub)
# ===================================
Write-Host "üìã Configurando conex√£o com GitHub..." -ForegroundColor Yellow
Write-Host ""
Write-Host "‚ö†Ô∏è  IMPORTANTE: Antes de continuar, crie um reposit√≥rio no GitHub!" -ForegroundColor Yellow
Write-Host "   1. Acesse: https://github.com/new" -ForegroundColor Cyan
Write-Host "   2. Nome do reposit√≥rio: pergeco (ou outro nome)" -ForegroundColor Cyan
Write-Host "   3. N√ÉO inicialize com README, .gitignore ou license" -ForegroundColor Cyan
Write-Host "   4. Clique em 'Create repository'" -ForegroundColor Cyan
Write-Host ""

$response = Read-Host "Voc√™ j√° criou o reposit√≥rio no GitHub? (S/N)"

if ($response -eq "S" -or $response -eq "s") {
    Write-Host ""
    $repoUrl = Read-Host "Digite a URL do reposit√≥rio (ex: https://github.com/usuario/pergeco.git)"
    
    try {
        git remote add origin $repoUrl
        Write-Host "‚úÖ Remote configurado!" -ForegroundColor Green
        Write-Host ""
        
        # ===================================
        # 11. Push para GitHub
        # ===================================
        Write-Host "üìã Enviando c√≥digo para o GitHub..." -ForegroundColor Yellow
        git push -u origin main
        Write-Host "‚úÖ C√≥digo enviado para a branch main!" -ForegroundColor Green
        Write-Host ""
        
        Write-Host "üìã Enviando tags para o GitHub..." -ForegroundColor Yellow
        git push origin --tags
        Write-Host "‚úÖ Tags enviadas!" -ForegroundColor Green
        Write-Host ""
        
        Write-Host "üéâ SUCESSO! Reposit√≥rio configurado e c√≥digo enviado!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìä Resumo:" -ForegroundColor Cyan
        Write-Host "   ‚úÖ Reposit√≥rio Git inicializado" -ForegroundColor Green
        Write-Host "   ‚úÖ Commit inicial criado" -ForegroundColor Green
        Write-Host "   ‚úÖ Tags criadas (v0.1.0 e v1.0.0)" -ForegroundColor Green
        Write-Host "   ‚úÖ C√≥digo enviado para o GitHub" -ForegroundColor Green
        Write-Host ""
        Write-Host "üîó Acesse seu reposit√≥rio em:" -ForegroundColor Cyan
        Write-Host "   $repoUrl" -ForegroundColor Yellow
        
    } catch {
        Write-Host "‚ùå Erro ao configurar remote ou fazer push!" -ForegroundColor Red
        Write-Host "   Erro: $_" -ForegroundColor Red
        Write-Host ""
        Write-Host "üí° Tente manualmente:" -ForegroundColor Yellow
        Write-Host "   git remote add origin $repoUrl" -ForegroundColor Cyan
        Write-Host "   git push -u origin main" -ForegroundColor Cyan
        Write-Host "   git push origin --tags" -ForegroundColor Cyan
    }
} else {
    Write-Host ""
    Write-Host "‚úÖ Reposit√≥rio local configurado!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìä Resumo:" -ForegroundColor Cyan
    Write-Host "   ‚úÖ Reposit√≥rio Git inicializado" -ForegroundColor Green
    Write-Host "   ‚úÖ Commit inicial criado" -ForegroundColor Green
    Write-Host "   ‚úÖ Tags criadas (v0.1.0 e v1.0.0)" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìù Pr√≥ximos passos:" -ForegroundColor Yellow
    Write-Host "   1. Crie um reposit√≥rio no GitHub" -ForegroundColor Cyan
    Write-Host "   2. Execute os comandos:" -ForegroundColor Cyan
    Write-Host "      git remote add origin https://github.com/usuario/pergeco.git" -ForegroundColor White
    Write-Host "      git push -u origin main" -ForegroundColor White
    Write-Host "      git push origin --tags" -ForegroundColor White
}

Write-Host ""
Write-Host "üìö Para mais informa√ß√µes, consulte: GIT_GITHUB_SETUP.md" -ForegroundColor Cyan
Write-Host ""
